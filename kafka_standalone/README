This playbook will create a standalone Kafka node which includes a local Zookeeper service

It has been tested and works on Red Hat 7, CentOS 7, CentOS 8 and Debian.

Roles are used for each Operating system by gathering Ansible facts of the host the playbook is running on

run command:
  ansible-playbook -i hosts site.yml

site.yml gathers OS info then loads tasks/main.yml and vars/main.yml

tasks/main.yml runs tasks/debian.yml or tasks/redhat.yml with OS specific commands

These each import their respective OS specific vars/ files

Anything that can be updated is in /vars
You may want to add some new config in, I just have the basics to get it running

There is a test script at the end which makes sure the node is healthy:
Creates a topic > describes the topic > produces a test message > consumes the same test message

If successful, you will see this on your Ansible output:
ok: [IP] => {
    "testscript.stdout": "Creating test topic.....\nCreated topic mytesttopic.\n\n
    Describe test topic.....\nTopic: mytesttopic\tPartitionCount: 1\tReplicationFactor: 1\tConfigs: segment.bytes=1073741824\n\tTopic: mytesttopic\tPartition: 0\tLeader: 0\tReplicas: 0\tIsr: 0\n\n
    Produce test message into topic.....\n>>\n
    Consume test message from topic.....\nThis is a test message on mytesttopic\n\n
    Congrats! If you got this far without errors, your standalone Kafka node is good to go!"
}

Also included some helpful scripts in your Kafka user's home to create, describe and list topics.
NOTE: Kafka user should be NON-ROOT so if it is ever compromised the system cannot be damaged
