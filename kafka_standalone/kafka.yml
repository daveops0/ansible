---
- name: kafka.yml
  gather_facts: false
  hosts: all
  remote_user: root
  become: yes
  vars_files:
    - ./vars/main.yml

  tasks:
    - name: Install Unzip
      ansible.builtin.yum:
       name: "{{ unzip_package }}"
       state: present

    - name: Install Java
      ansible.builtin.yum:
       name: "{{ java_package }}"
       state: present

    - name: Export java_home
      ansible.builtin.lineinfile:
       dest: /etc/bashrc
       line: "{{ java_export }}"

    - name: Download and unzip kafka
      unarchive:
        src: "{{ kafka_download_url }}"
        dest: "{{ kafka_download_dir }}"
        remote_src: yes

    - name: Add kafka group
      ansible.builtin.group:
        name: "{{ kafka_group }}"
        state: present

    - name: Add kafka user
      ansible.builtin.user:
        name: "{{ kafka_user }}"
        group: "{{ kafka_group }}"

    - name: Create a soft link
      ansible.builtin.file:
        src: "{{ kafka_download_dir }}{{ kafka_download_file }}"
        dest: "{{ kafka_home }}"
        state: link
        force: yes
        follow: yes

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "{{ kafka_download_dir }}{{ kafka_download_file }}/bin/"
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: '0744'
        recurse: yes

    - name: Add zk and kafka system files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: 0644
      with_items:
        - {src: './templates/zookeeper.properties.j2',dest: '{{ kafka_home }}/config/zookeeper.properties',owner: '{{ kafka_user }}',group: '{{ kafka_group }}'}
        - {src: './templates/server.properties.j2',dest: '{{ kafka_home }}/config/server.properties',owner: '{{ kafka_user }}',group: '{{ kafka_group }}'}
        - {src: './templates/zookeeper.service.j2',dest: '/usr/lib/systemd/system/zookeeper.service',owner: 'root',group: 'root'}
        - {src: './templates/kafka.service.j2',dest: '/usr/lib/systemd/system/kafka.service',owner: 'root',group: 'root'}

    - name: Create zookeeper systemd link
      ansible.builtin.file:
        src: /usr/lib/systemd/system/zookeeper.service
        dest: /etc/systemd/system/multi-user.target.wants/zookeeper.service
        state: link

    - name: Create kafka systemd link
      ansible.builtin.file:
        src: /usr/lib/systemd/system/kafka.service
        dest: /etc/systemd/system/multi-user.target.wants/kafka.service
        state: link

    - name: Start/enable zookee per systemd service
      ansible.builtin.systemd:
        state: started
        daemon_reload: yes
        name: zookeeper.service
        enabled: yes

    - name: Start/enable kafka systemd service
      ansible.builtin.systemd:
        state: started
        daemon_reload: yes
        name: kafka.service
        enabled: yes

    - name: Add useful scripts
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: 0744
      with_items:
        - {src: './templates/createTopic.sh.j2',dest: '/home/{{ kafka_user }}/createTopic.sh'}
        - {src: './templates/describeTopic.sh.j2',dest: '//home/{{ kafka_user }}/describeTopic.sh'}
        - {src: './templates/listTopics.sh.j2',dest: '/home/{{ kafka_user }}/listTopics.sh'}
        - {src: './templates/kafkaTopicTest.sh.j2',dest: '/home/{{ kafka_user }}/kafkaTopicTest.sh'}

    - name: run test script
      become_user: kafka
      shell: "/home/{{ kafka_user }}/kafkaTopicTest.sh"
      register: testscript

    - name: test script result
      debug:
        var: testscript.stdout
